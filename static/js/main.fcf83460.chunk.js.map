{"version":3,"sources":["ebconfig.js","HeightContainer.js","App.js","index.js"],"names":["ebconfig","HeightContainer","useState","easybaseData","setEasybaseData","db","useEasybase","mounted","a","randNum","Math","floor","random","return","limit","offset","all","ebData","console","log","useEffect","style","display","flexWrap","map","ele","src","imglink","height","width","name","App","Grid","container","spacing","item","xs","sm","m","l","Paper","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAQeA,EALE,CACf,YAAe,oDACf,QAAW,c,qDC4BEC,EA9BS,WACtB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACQC,EAAOC,cAAPD,GAEFE,EAAO,uCAAG,8BAAAC,EAAA,6DACRC,EAAUC,KAAKC,MAAM,IAAAD,KAAKE,UAA4B,EAD9C,SAEOP,EAAG,UAAUQ,SAASC,MAAM,GAAGC,OAAON,GAASO,MAFtD,OAERC,EAFQ,OAGdb,EAAgBa,GAChBC,QAAQC,IAAI,OAAQhB,GAJN,2CAAH,qDAWb,OAJAiB,qBAAU,WACRb,MACC,IAGD,qBAAKc,MAAO,CAAEC,QAAS,OAAQC,SAAU,QAAzC,SACGpB,EAAaqB,KAAI,SAACC,GAEjB,OADAP,QAAQC,IAAIM,GAEV,gCACE,qBAAKC,IAAKD,EAAIE,QAASC,OAAO,MAAMC,MAAM,QAC1C,6BAAKJ,EAAIK,gBCsENC,MAxFH,WACV,OACE,eAAC,IAAD,CAAkB/B,SAAUA,EAA5B,UACE,eAACgC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,EAAG,EAAGC,EAAG,EAAnC,SACE,cAACC,EAAA,EAAD,qBAEF,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,EAAG,EAAGC,EAAG,EAAnC,SACE,cAACC,EAAA,EAAD,qBAEF,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,EAAG,EAAGC,EAAG,EAAnC,SACE,cAACC,EAAA,EAAD,qBAEF,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,EAAG,EAAGC,EAAG,EAAnC,SACE,cAACC,EAAA,EAAD,qBAEF,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,EAAG,EAAGC,EAAG,EAAnC,SACE,cAACC,EAAA,EAAD,wBAGJ,cAAC,EAAD,QCrBNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.fcf83460.chunk.js","sourcesContent":["/* eslint-disable */\n// WARNING: Do not edit this file\n\nconst ebconfig = {\n  \"integration\": \"project-Project1-YQDvYX8eTJV-hZU0HQ3NSIyujYxjo-xN\",\n  \"version\": \"2020-11-20\"\n}\n\nexport default ebconfig;","import React, { useEffect, useState } from \"react\";\nimport { useEasybase } from \"easybase-react\";\n\nconst HeightContainer = () => {\n  const [easybaseData, setEasybaseData] = useState([]);\n  const { db } = useEasybase();\n\n  const mounted = async () => {\n    const randNum = Math.floor(Math.random() * (640 - 0 + 1)) + 0;\n    const ebData = await db(\"PEOPLE\").return().limit(1).offset(randNum).all();\n    setEasybaseData(ebData);\n    console.log(\"DATA\", easybaseData);\n  };\n\n  useEffect(() => {\n    mounted();\n  }, []);\n\n  return (\n    <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n      {easybaseData.map((ele) => {\n        console.log(ele);\n        return (\n          <div>\n            <img src={ele.imglink} height=\"250\" width=\"150\" />\n            <h4>{ele.name}</h4>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default HeightContainer;\n","import \"./App.css\";\nimport { EasybaseProvider, useEasybase } from \"easybase-react\";\nimport { useEffect } from \"react\";\nimport ebconfig from \"./ebconfig\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport HeightContainer from \"./HeightContainer\";\n\nconst App = () => {\n  return (\n    <EasybaseProvider ebconfig={ebconfig}>\n      <Grid container spacing={3}>\n        <Grid item xs={12} sm={6} m={3} l={3}>\n          <Paper>Game</Paper>\n        </Grid>\n        <Grid item xs={12} sm={6} m={3} l={3}>\n          <Paper>Game</Paper>\n        </Grid>\n        <Grid item xs={12} sm={6} m={3} l={3}>\n          <Paper>Game</Paper>\n        </Grid>\n        <Grid item xs={12} sm={6} m={3} l={3}>\n          <Paper>Game</Paper>\n        </Grid>\n        <Grid item xs={12} sm={6} m={3} l={3}>\n          <Paper>Game</Paper>\n        </Grid>\n      </Grid>\n      <HeightContainer />\n    </EasybaseProvider>\n  );\n};\n\nfunction Notes() {\n  const { Frame, sync, configureFrame } = useEasybase();\n  console.log(Frame);\n\n  useEffect(() => {\n    configureFrame({ tableName: \"NOTES\", limit: 10 });\n    sync();\n  }, [configureFrame, sync]);\n\n  const noteRootStyle = {\n    border: \"2px #0af solid\",\n    borderRadius: 9,\n    margin: 20,\n    backgroundColor: \"#efefef\",\n    padding: 6,\n  };\n\n  return (\n    <div style={{ width: 400 }}>\n      {Frame().map((ele) => {\n        console.log(ele);\n        return (\n          <div style={noteRootStyle}>\n            <h3>{ele.title}</h3>\n            <p>{ele.description}</p>\n            <small>{String(ele.createdat).slice(0, 10)}</small>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction NewNoteButton() {\n  const { Frame, sync } = useEasybase();\n\n  const buttonStyle = {\n    position: \"absolute\",\n    left: 10,\n    top: 10,\n    fontSize: 21,\n  };\n\n  const handleClick = () => {\n    const newTitle = prompt(\"Please enter a title for your note\");\n    const newDescription = prompt(\"Please enter your description\");\n\n    Frame().push({\n      title: newTitle,\n      description: newDescription,\n      createdat: new Date().toISOString(),\n    });\n\n    sync();\n  };\n\n  return (\n    <button style={buttonStyle} onClick={handleClick}>\n      ðŸ““ Add Note ðŸ““\n    </button>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}